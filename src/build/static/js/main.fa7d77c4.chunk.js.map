{"version":3,"sources":["UseAsync.ts","UseAsyncAction.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useAsync","action","dependencies","initialState","data","undefined","error","loading","useState","state","setState","idRef","useRef","perform","a","current","ourId","trigger","catch","useEffect","useAsyncAction","useStyles","makeStyles","createStyles","root","alignItems","lineHeight","width","height","position","display","whiteSpace","overflow","textOverflow","GridCellExpand","React","props","value","wrapper","cellDiv","cellValue","anchorEl","setAnchorEl","classes","showFullCell","setShowFullCell","showPopper","setShowPopper","document","addEventListener","handleKeyDown","removeEventListener","nativeEvent","key","ref","className","onMouseEnter","element","isCurrentlyOverflown","scrollHeight","clientHeight","scrollWidth","clientWidth","onMouseLeave","style","top","Popper","open","marginLeft","Paper","elevation","minHeight","offsetHeight","Typography","variant","padding","renderCellExpand","params","toString","colDef","computedWidth","App","file","fetch","text","xmlToJson","convert","xml2js","compact","registries","parsedData","national_commercial_registry","row","map","index","id","status","eik_pik","registry_zdds","registry_date","name","transliteration","legal_form","permanent_address","activity_area","managers","partners","capital","_text","console","log","isNaN","Header","field","headerName","renderCell","Container","maxWidth","gridTemplateColumns","justifySelf","marginTop","rows","columns","autoHeight","margin","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fa7d77c4.chunk.js","sourcesContent":["import React, { DependencyList, useEffect } from 'react';\nimport { useAsyncAction } from './UseAsyncAction'\n\nexport function useAsync<T>(\n  action: () => Promise<T>,\n  dependencies: DependencyList\n) {\n\n  const { trigger, ...state} = useAsyncAction(action, {\n    data: undefined,\n    loading: true,\n    error: undefined,\n  });\n\n\n  useEffect(()=> {\n    trigger();\n  }, dependencies);\n\n  return { ...state, trigger };\n}\n\n","import { useEffect, useRef, useState } from 'react';\n\nexport interface AsyncState<T> {\n  data: T | undefined;\n  loading: boolean;\n  error: any | undefined;\n}\n\nexport function useAsyncAction<T>(\n  action: (...params: any) => Promise<T>,\n  initialState: AsyncState<T> = {\n    data: undefined,\n    error: undefined,\n    loading: false\n  }\n) {\n  const [state, setState] = useState<AsyncState<T>>(initialState);\n\n  const idRef = useRef(0);\n\n  async function perform (...params: any) {\n      idRef.current += 1;\n      const ourId = idRef.current;\n\n      setState({ loading: true, data: undefined, error: undefined });\n\n      try {\n        const data = await action(...params);\n        if (idRef.current === ourId) {\n          setState({ loading: false, data, error: undefined });\n        }\n      } catch (error) {\n        if (idRef.current === ourId) {\n          setState({ loading: false, data: undefined, error });\n        }\n        throw error;\n      }\n    }\n\n    async function trigger(...params: any) {\n      perform(...params).catch(() => {\n        //intentionally ignored\n      });\n    }\n\n    useEffect(()=> {\n      return () => {\n        idRef.current += 1;\n      }\n    },[])\n  return {\n    ...state,\n    trigger,\n  }\n}\n","import * as React from 'react';\nimport convert from 'xml-js';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport { createStyles, makeStyles } from '@material-ui/styles';\nimport { DataGrid, GridColDef, GridRenderCellParams } from '@mui/x-data-grid';\nimport { useAsync } from './UseAsync';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      alignItems: 'center',\n      lineHeight: '24px',\n      width: '100%',\n      height: '100%',\n      position: 'relative',\n      display: 'flex',\n      '& .cellValue': {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n      },\n    },\n  })\n);\nfunction isOverflown(element: Element): boolean {\n  return (\n    element.scrollHeight > element.clientHeight ||\n    element.scrollWidth > element.clientWidth\n  );\n}\ninterface GridCellExpandProps {\n  value: string;\n  width: number;\n}\n\nconst GridCellExpand = React.memo(function GridCellExpand(\n  props: GridCellExpandProps\n) {\n  const { width, value } = props;\n  const wrapper = React.useRef<HTMLDivElement | null>(null);\n  const cellDiv = React.useRef(null);\n  const cellValue = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const classes = useStyles();\n  const [showFullCell, setShowFullCell] = React.useState(false);\n  const [showPopper, setShowPopper] = React.useState(false);\n\n  const handleMouseEnter = () => {\n    const isCurrentlyOverflown = isOverflown(cellValue.current!);\n    setShowPopper(isCurrentlyOverflown);\n    setAnchorEl(cellDiv.current);\n    setShowFullCell(true);\n  };\n\n  const handleMouseLeave = () => {\n    setShowFullCell(false);\n  };\n\n  React.useEffect(() => {\n    if (!showFullCell) {\n      return undefined;\n    }\n\n    function handleKeyDown(nativeEvent: KeyboardEvent) {\n      // IE11, Edge (prior to using Bink?) use 'Esc'\n      if (nativeEvent.key === 'Escape' || nativeEvent.key === 'Esc') {\n        setShowFullCell(false);\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [setShowFullCell, showFullCell]);\n\n  return (\n    <div\n      ref={wrapper}\n      className={classes.root}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      <div\n        ref={cellDiv}\n        style={{\n          height: 1,\n          width,\n          display: 'block',\n          position: 'absolute',\n          top: 0,\n        }}\n      />\n      <div ref={cellValue} className='cellValue'>\n        {value}\n      </div>\n      {showPopper && (\n        <Popper\n          open={showFullCell && anchorEl !== null}\n          anchorEl={anchorEl}\n          style={{ width, marginLeft: -17 }}\n        >\n          <Paper\n            elevation={1}\n            style={{ minHeight: wrapper.current!.offsetHeight - 3 }}\n          >\n            <Typography variant='body2' style={{ padding: 8 }}>\n              {value}\n            </Typography>\n          </Paper>\n        </Popper>\n      )}\n    </div>\n  );\n});\ninterface DataType extends convert.ElementCompact {\n  registries: {\n    national_commercial_registry: {\n      row: {\n        id: {\n          _text: string;\n        };\n        status: {\n          _text: string;\n        };\n        eik_pik: {\n          _text: string;\n        };\n        registry_zdds: {\n          _text: string;\n        };\n        registry_date: {\n          _text: number;\n        };\n        name: {\n          _text: string;\n        };\n        transliteration: {\n          _text: string;\n        };\n        legal_form: {\n          _text: string;\n        };\n        permanent_address: {\n          _text: string;\n        };\n        activity_area: {\n          _text: string;\n        };\n        managers: {\n          _text: string;\n        };\n        partners: {\n          _text: string;\n        };\n        capital: {\n          _text: string;\n        };\n      }[];\n    };\n  };\n}\n\ninterface ParsedDataType extends convert.ElementCompact {\n  id: string;\n  status: string;\n  eik_pik: string;\n  registry_zdds: string;\n  registry_date: number;\n  name: string;\n  transliteration: string;\n  legal_form: string;\n  permanent_address: string;\n  activity_area: string;\n  managers: string;\n  partners: string;\n  capital: string;\n}\n\nfunction renderCellExpand(params: GridRenderCellParams) {\n  return (\n    <GridCellExpand\n      value={params.value ? params.value.toString() : ''}\n      width={params.colDef.computedWidth}\n    />\n  );\n}\n\nexport function App() {\n  const { data: file } = useAsync(\n    async () => (await fetch('./commercialRegistry.xml')).text(),\n    []\n  );\n  const xmlToJson: Partial<DataType> = convert.xml2js(file || '', {\n    compact: true,\n  });\n\n  if (!xmlToJson) return null;\n  if (!xmlToJson.registries) return null;\n\n  const rows = xmlToJson?.registries?.national_commercial_registry?.row;\n\n  const parsedData = rows.map((data, index: number) => {\n    const parsedData: ParsedDataType = {\n      id: '',\n      status: '',\n      eik_pik: '',\n      registry_zdds: '',\n      registry_date: 0,\n      name: '',\n      transliteration: '',\n      legal_form: '',\n      permanent_address: '',\n      activity_area: '',\n      managers: '',\n      partners: '',\n      capital: '',\n    };\n    parsedData.id = index.toString();\n    parsedData.status = data.status._text;\n    parsedData.eik_pik = data.eik_pik._text;\n    parsedData.registry_zdds = data.registry_zdds._text;\n    parsedData.registry_date = data.registry_date._text;\n    parsedData.name = data.name._text;\n    parsedData.transliteration = data.transliteration._text;\n    parsedData.legal_form = data.legal_form._text;\n    parsedData.permanent_address = data.permanent_address._text;\n    parsedData.activity_area = data.activity_area._text;\n    parsedData.managers = data.managers._text;\n    parsedData.partners = data.partners._text;\n    parsedData.capital = data.capital._text;\n    console.log(parsedData.registry_date, isNaN(parsedData.registry_date));\n    return parsedData;\n  });\n\n  const Header: GridColDef[] = [\n    {\n      field: 'status',\n      headerName: 'Статус',\n      width: 150,\n      renderCell: renderCellExpand,\n    },\n    {\n      field: 'eik_pik',\n      headerName: 'ЕИК/ПИК',\n      width: 150,\n      renderCell: renderCellExpand,\n    },\n    {\n      field: 'registry_zdds',\n      headerName: 'Регистрация по ЗДДС',\n      width: 250,\n      renderCell: renderCellExpand,\n    },\n    {\n      field: 'registry_date',\n      headerName: 'Година на регистрация',\n      width: 250,\n      renderCell: renderCellExpand,\n    },\n    {\n      field: 'name',\n      headerName: 'Наименование',\n      width: 200,\n      renderCell: renderCellExpand,\n    },\n    {\n      field: 'transliteration',\n      headerName: 'Транслитерация',\n      width: 200,\n      renderCell: renderCellExpand,\n    },\n    {\n      field: 'legal_form',\n      headerName: 'Правна форма',\n      width: 200,\n      renderCell: renderCellExpand,\n    },\n    {\n      field: 'permanent_address',\n      headerName: 'Постоянен адрес',\n      width: 200,\n      renderCell: renderCellExpand,\n    },\n    {\n      field: 'activity_area',\n      headerName: 'Предмет на дейност',\n      width: 300,\n      renderCell: renderCellExpand,\n    },\n    {\n      field: 'managers',\n      headerName: 'Управители',\n      width: 300,\n      renderCell: renderCellExpand,\n    },\n    {\n      field: 'partners',\n      headerName: 'Съдружници',\n      width: 250,\n      renderCell: renderCellExpand,\n    },\n    {\n      field: 'capital',\n      headerName: 'Капитал размер',\n      width: 200,\n      renderCell: renderCellExpand,\n    },\n  ];\n\n  return (\n    <>\n      <Container\n        maxWidth='xl'\n        style={{\n          display: 'grid',\n          gridTemplateColumns: '1fr',\n        }}\n      >\n        <Typography variant='h3' style={{justifySelf: 'center', marginTop: '10px' }}>Национален търговски регистър</Typography>\n        <Typography variant='h4' style={{justifySelf: 'center', marginTop: '10px' }}>Модел на данните</Typography>\n\n        <DataGrid rows={parsedData} columns={Header} autoHeight style={{margin: '50px', backgroundColor: '#fff9e6'}} />\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}